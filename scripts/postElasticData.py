#!/bin/python

"""
usage:

local development:
python postElasticData.py ./data/test.json

production:
(make sure you use the production environment credentials below before executing the script.)
python postElasticData.py ./data/portal_all.json


Reference docs and caveats:

https://www.elastic.co/guide/en/elasticsearch/client/python-api/master/connecting.html
https://www.elastic.co/guide/en/elasticsearch/client/python-api/master/examples.html

NOTE:
https://www.elastic.co/guide/en/elasticsearch/reference/1.5/index-modules-allocation.html#disk
Disk space on the device you are hosting elasticsearch actually matters.
https://stackoverflow.com/a/30290955
"""

import pprint
import json
import argparse
from elasticsearch import Elasticsearch


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Program to create an elasticsearch index for target datasets')
    parser.add_argument('entries',help='Elasticsearcg Entries in json format, see test.json for an example.')
    args = parser.parse_args()

    # Password for the 'elastic' user generated by Elasticsearch for your instance
    ELASTIC_PASSWORD = "16V0Iy3AKdXPh7Qj8QOA"

    
    # use above code block if using CA-certs.
    client = Elasticsearch(
        "http://localhost:9200",
        basic_auth=("elastic", ELASTIC_PASSWORD)
    )

    pprint.pprint(client.info())

    with open(args.entries,'r') as q:
        data = json.load(q)

    # add the entries to elasticsearch
    i = 0
    for doc in data:
        i = i +1
        resp = client.index(index="target", id=i, document=doc)
        print(f'{doc["experiment_id"]}\t{resp["result"]}')
